<Window x:Class="lab4.Windows.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        mc:Ignorable="d"
        Height="700" Width="1200"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen"
        x:Name="settingsWindow"
        Background="Transparent"
        AllowsTransparency="True"
        WindowStyle="None"
        Cursor="D:\Labs\OOP\lab4\lab4\Assets\1.cur"
        FontSize="15">
    <Window.Resources>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" Background="#6C6D6D6D" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="45">
                                <Path x:Name="arrow" Data="{StaticResource DownIcon}"
                                      Stretch="Uniform" Fill="{DynamicResource SecondaryBrush}" HorizontalAlignment="Center" Margin="16,0" VerticalAlignment="Center"
                                      RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <RotateTransform/>
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource BackIconBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate 
            x:Key="ComboBoxTemplate" 
                         TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Popup x:Name="PART_Popup" 
                   AllowsTransparency="true" 
                   Grid.ColumnSpan="3" 
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                   Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                   Placement="Bottom">
                    <Border x:Name="dropDownBorder" 
                            HorizontalAlignment="Stretch"
                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" 
                        BorderThickness="1" 
                        Background="{DynamicResource DimBrush}">
                        <ScrollViewer 
                        x:Name="DropDownScrollViewer" 
                        CanContentScroll="False">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top">
                                    <Rectangle 
                                    x:Name="opaqueRect" 
                                    Fill="{Binding Background, ElementName=dropDownBorder}" 
                                    Height="{Binding ActualHeight, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter 
                                x:Name="ItemsPresenter" 
                                KeyboardNavigation.DirectionalNavigation="Contained" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <ToggleButton x:Name="toggleButton" 
                          BorderBrush="{TemplateBinding BorderBrush}" 
                          BorderThickness="{TemplateBinding BorderThickness}" 
                          Background="{TemplateBinding Background}" 
                          Grid.ColumnSpan="3" 
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                          Style="{StaticResource ComboBoxToggleButton}"/>

                <Path Grid.Column="0"
      Height="18"
      Fill="{TemplateBinding Foreground}"
      HorizontalAlignment="Right"
      VerticalAlignment="Center"/>

                <ContentPresenter 
                Grid.Column="0" 
                x:Name="contentPresenter" 
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                Content="{TemplateBinding SelectionBoxItem}" 
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                IsHitTestVisible="false" Margin="{TemplateBinding Padding}" 
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Popup 
                x:Name="PART_Popup" 
                   AllowsTransparency="true" 
                   Grid.ColumnSpan="2" 
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                   Placement="Bottom">
                    <Border 
                    x:Name="dropDownBorder" 
                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" 
                    BorderThickness="1" 
                    Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                        <ScrollViewer 
                        x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" >
                                    <Rectangle 
                                    x:Name="opaqueRect" 
                                    Fill="{Binding Background, ElementName=dropDownBorder}" 
                                    Height="{Binding ActualHeight, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" 
                                            KeyboardNavigation.DirectionalNavigation="Contained" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>

            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxItemStyle1" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="36,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="56"/>
            <Setter Property="FontWeight" Value="Thin"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border 
                        x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="true">
                            <ContentPresenter 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" 
                                    TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource BackIconBrush}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="languageComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="FontFamily" Value="Lato"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Background" Value="#6C6D6D"/>
            <Setter Property="BorderBrush" Value="#FFACACAC"/>
            <Setter Property="Cursor" Value="D:\Labs\OOP\lab4\lab4\Assets\4.ani"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="56"/>
            <Setter Property="Width" Value="241"/>
            <Setter Property="MaxDropDownHeight" Value="226"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle1}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" 
                               SnapsToDevicePixels="true" 
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                               StrokeThickness="1" 
                               StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#EBEBEB"/>
        <SolidColorBrush x:Key="OptionMark.Static.CheckedBorder" Color="#0057BD"/>
        <SolidColorBrush x:Key="CheckBoxOuter.MouseOver.Checked.Background" Color="#1A2E45"/>
        <SolidColorBrush x:Key="CheckBoxOuter.MouseOver.UnChecked.Background" Color="#4D4D4D"/>
        <SolidColorBrush x:Key="CheckBox.MouseOver.Foreground" Color="#EBEBEB"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#0057BD"/>
    </Window.Resources>
    <Grid
        Background="{DynamicResource DefaultBackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="70"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Button
            x:Name="settingsBackButton"
            Content="{DynamicResource settingsBackText}"
            Style="{StaticResource NavBackButtonStyle}"
            Click="closeButton_Click"/>

        <StackPanel
            Grid.Row="1" 
            Margin="10,10,0,0">
            <TextBlock 
                Style="{StaticResource titleText}"
                FontWeight="SemiBold"
                FontSize="15"
                Foreground="{DynamicResource SecondaryBrush}"
                Margin="10"
                Text="{DynamicResource languageTextBlock}"/>
            <ComboBox
                Margin="10,10,0,0"
                x:Name="languageComboBox"
                Style="{StaticResource languageComboBoxStyle}"
                SelectedItem="{Binding Language, Source={x:Static Application.Current}}"
                ItemsSource="{Binding Languages, Source={x:Static Application.Current}}" IsReadOnly="True">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock
                    Width="auto"
                    HorizontalAlignment="Stretch"
                            Text="{Binding DisplayName}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <TextBlock 
                Style="{StaticResource titleText}"
                FontWeight="SemiBold"
                FontSize="15"
                Foreground="{DynamicResource SecondaryBrush}"
                Margin="10,30,0,0"
                Text="{DynamicResource themeCmbLabelText}"/>
            <ComboBox
                IsReadOnly="True"
                Style="{StaticResource languageComboBoxStyle}"
                    x:Name="themeComboBox"
                    SelectionChanged="ComboBox_SelectionChanged" 
                Margin="10,10,0,0">
                <ComboBoxItem
                    Width="241"
                    HorizontalAlignment="Stretch"
                    Content="{DynamicResource lightThemeText}"/>
                <ComboBoxItem 
                    Width="241"
                    HorizontalAlignment="Stretch"
                    Content="{DynamicResource darkThemeText}"/>
            </ComboBox>
        </StackPanel>
            
    </Grid>
</Window>
